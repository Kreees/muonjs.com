h4.title#client Содержание клиента
p <strong>Клиентская</strong> составляющая хранит в себе все то, что в конечном счете в том или ином виде будет показано пользователю в окне браузера,
    |  и с чем он будет непосредственно взаимодействовать (пользовательская логика). Одностраничное приложение
    |  безусловно можно было бы написать в одном единственном HTML-файле, однако, обеспечить более менее значимую сложность и функциональность
    |  приложения в таком случае будет непросто. По этой причине одной из наиболее критичных задач связанных с построением клиента является
    |  <strong>структуризация</strong> и <strong>декомпозиция</strong> клиента.
p Для удобства разработки <strong>толстый клиент</strong> может быть разбит на части и представлен в виде
    |  совокупностей взаимодействующих элементов интефрейса - <strong>виджетов</strong>. Те, кто знаком с разработкой пользовательских интерфейсов для
    |  настольных прилжоений (MFC, VCL, QtGui и т.д.), помнят назначение виджетов (widgets). В Muon интерфейс пользователя
    |  строится как "конструктор" из вложенных частей, которыми виджеты и являются.
p Основной задачей виджетов, как например в случае с C++ библиотекой <a href='http://qt-project.org' target='new'>QtGui</a>,
    |  является формирование законченных логических элементов интерфейса, выполняющих одну конкретную задачу. Это могут быть
    |  дата пикеры, прогрес бары, формы ввода, диалоговые окна - все что так или иначе может потребоваться для решения небольших частных задач.
    |  В общем случае, я считаю, целесообразно выводить все более-менее значимые <strong>паттерны</strong> пользовательского интерфейса в отдельные виджеты,
    |  тем самым обеспечивая повторное использование программного кода.
p Более подробно о существующих паттернах UI и UIX в вебе мы поговорим по мере написания нашего Супер Календаря. Однако уже сейчас вполне возможно
    |  затронуть наиболее распростарненные из них. В первую очередь к ним отностися веб-старинца.